{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","setSortType","isReversed","setReversed","newGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","getReorderedGoods","ifChange","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA9BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAgBzB,OAdAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKjB,EAASkB,KACd,QACE,OAAO,MAITZ,EACKI,EAAaS,UAGfT,EAMUU,CAAkBnB,EAAiB,CAAEG,WAAUE,eAC1De,EAAWf,GAAcF,IAAaJ,EAASkB,KAErD,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAaJ,EAASc,WAGtCW,QAAS,WACPpB,EAAYL,EAASc,WATzB,iCAeA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAaJ,EAASgB,SAGtCS,QAAS,WACPpB,EAAYL,EAASgB,SATzB,4BAeA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAalB,IAGjBmB,QAAS,WACPlB,GAAac,IATjB,qBAeCA,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,EAAYL,EAASkB,MACrBX,GAAY,IALhB,sBAaJ,6BACE,6BACGC,EAASkB,KAAI,SAAAC,GAAI,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC5HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9dbb0395.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(0);\n  const [isReversed, setReversed] = useState(false);\n  const newGoods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const ifChange = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => {\n            setReversed(!ifChange);\n          }}\n        >\n          Reverse\n        </button>\n\n        {ifChange && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {newGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}